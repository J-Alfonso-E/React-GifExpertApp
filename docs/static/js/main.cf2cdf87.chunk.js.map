{"version":3,"sources":["Componentes/AgregarCategoria.js","Complementos/GifFetch.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AgregarCategoria","EnviarCategoria","useState","ValorEntrada","SetValor","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","ObtGif","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categorias","setCategorias","Catg","ReactDOM","render","document","getElementById"],"mappings":"iNAGaA,EAAmB,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,gBAE9B,EAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAqBC,EAArB,KAiBA,OACI,uBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAECJ,EAAaK,OAAOC,OAAS,IAC5BR,GAAgB,SAAAS,GAAI,OAAKP,GAAL,mBAAsBO,OAC1CN,EAAS,MAOb,UACI,mDACI,uBACAO,KAAK,OACLC,MAAST,EACTU,SArBQ,SAACP,GACjBF,EAASE,EAAEQ,OAAOF,c,+BCRbG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEZG,EAFY,gBAGGA,EAAIC,OAHP,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAEzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAaXM,GAbW,4CAAH,sDCENO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGhC,OAFAc,QAAQC,IAAI,CAACL,QAAOV,QAGhB,sBAAKgB,UAAU,OAAf,UACI,qBAAKA,UAAU,yBAAyBC,IAAKjB,EAAKkB,IAAKR,IACvD,mBAAGM,UAAU,OAAb,SAAqBN,QCHpBS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,UAEtB,ECJwB,SAAEA,GAC1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAW,WACP1B,EAAOC,GACN0B,MAAK,SAAAC,GACFC,YAAa,WACTJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAER,CAACtB,IASGuB,EDrBiBM,CAAc7B,GAA/BO,EAAP,EAAOA,KAAMe,EAAb,EAAaA,QAEb,OACI,qCACA,6BAAKtB,IAEJsB,GAAW,WACZ,qBAAKJ,UAAU,YAAf,SAGSX,EAAKE,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEsB3BmB,EAnCM,WAEjB,MAAoC5C,mBAAS,CAAC,kBAA9C,mBAAO6C,EAAP,KAAmBC,EAAnB,KAUA,OACI,qCACI,gDACA,cAAC,EAAD,CAAmB/C,gBAAiB+C,IAFxC,IAGI,uBAIA,6BAEID,EAAWtB,KAAI,SAAAwB,GAAI,OACf,cAAC,EAAD,CAEAjC,UAAaiC,GADNA,YCrB3BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cf2cdf87.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const AgregarCategoria = ({EnviarCategoria}) => { //Se recibe la funcion desde GifExpertApp\n\n    const [ValorEntrada, SetValor] = useState('');\n\n    const CambioValor = (e) => {\n        SetValor(e.target.value);\n    }\n\n    const EnvioCategoria = (e) => {\n        e.preventDefault();\n\n        if(ValorEntrada.trim().length > 2){\n            EnviarCategoria(cats => [ValorEntrada, ...cats,]); //Cuando se recibe una funcion de Hook el Estado puede ser accedido de esta manera y agregar la nueva categoria\n            SetValor('');\n        }\n\n        \n    }\n\n    return (\n        <form onSubmit={EnvioCategoria}>\n            <h2>Agregar Categoria</h2>\n                <input\n                type='text'\n                value = {ValorEntrada}\n                onChange={CambioValor}\n                >\n                </input>\n        </form>\n    )\n};\n\nAgregarCategoria.propTypes = {\n    EnviarCategoria : PropTypes.func.isRequired\n}","export const ObtGif = async(categoria) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=Eav0Of2J4oolgnNip2pPbVrMOpphDCBv`;\n    const res = await fetch(url);\n    const {data} = await res.json();\n\n    const gifs = data.map(img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from \"react\";\n\nexport const GifGridItem = ({title, url}) => {\n    console.log({title, url});\n\n    return (\n        <div className='card'>\n            <img className='card animate__bounceIn' src={url} alt={title}></img>\n            <p className='card'>{title}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n//import { ObtGif } from \"../Complementos/GifFetch\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ( {categoria}) => {\n\n    const {data, loading} = useFetchGifs( categoria);\n\n    return (\n        <>\n        <h3>{categoria}</h3>\n\n        {loading && 'Cargando' }\n        <div className='card-grid'>\n            \n            \n                {data.map( img => (\n                    <GifGridItem key={img.id} {...img} />\n                ))\n                }\n        </div>\n        </>\n    )\n}","import { useEffect, useState } from \"react\"\nimport { ObtGif } from \"../Complementos/GifFetch\";\n\nexport const useFetchGifs = ( categoria ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        ObtGif(categoria)\n        .then(imgs => {\n            setTimeout ( () => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            }, 3000);\n        })\n    }, [categoria])\n\n    /*setTimeout( () => {\n        setState({\n            data: [1,2,3,4],\n            loading: false\n        })\n    }, 3000);*/\n\n    return state; //{data: [], loading: true}\n}","import React, { useState } from \"react\"\nimport { AgregarCategoria } from \"./Componentes/AgregarCategoria\";\nimport { GifGrid } from \"./Componentes/GifGrid\";\n\n\nconst GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Halo Infinite']);\n    \n\n    /*const AgregarCategorias = () => {\n        setCatergorias([...categorias, '9 Years of Shadows']); // Operador Spread  https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Operators/Spread_syntax\n\n        //Segunda forma de Regresar el valor\n\n        //setCatergorias(cats => [...cats, '9 Years of Shadows']);\n    }*/\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AgregarCategoria  EnviarCategoria={setCategorias}/> {/* Envio de una funcion al componente */}\n            <hr />\n\n            \n\n            <ol>\n                {\n                categorias.map(Catg => (\n                    <GifGrid\n                    key = {Catg}\n                    categoria = {Catg}\n                    />\n                ))\n            }\n            </ol>\n        </>\n    );\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}